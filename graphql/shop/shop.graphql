extend type Query {
    shops(id: ID @orderBy(column: "id", order: DESC)): [Shop!]!
        @paginate(defaultCount: 5)

    shopDetails(id: ID!): Shop!
        @field(resolver: "App\\GraphQL\\Queries\\ShopResolver@getDetails")
}

extend type Mutation @guard {
    createShop(input: CreateShop @spread): Shop!
        @field(resolver: "App\\GraphQL\\Mutations\\ShopResolver@create")
}

input CreateShop {
    generalDetails: CreateGeneralDetails!
    addressDetails: [CreateShopAddress!]!
    productDetails: [CreateShopProduct!]!
}

input CreateGeneralDetails {
    name: String!
    description: String
    website: String
    number: String!
    email: String!
    image: String
}

type Shop {
    id: ID!
    name: String!
    description: String
    website: String
    mobile_number: String!
    email: String!
    image: String!
    status: String!
    createdBy: User
    productCount: Int! @count(relation: "products")
    products: [ShopProduct!]! @hasMany
    addresses: [ShopAddress!]! @hasMany
}
